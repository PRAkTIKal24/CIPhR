name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        export PATH="$HOME/.local/bin:$PATH"
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Create virtual environment and install dependencies
      run: |
        uv venv --python ${{ matrix.python-version }}
        source .venv/bin/activate
        # Install main dependencies
        uv pip install -e .
        # Install dev dependencies (including pytest) - must run from project dir
        uv pip install --group dev

    - name: Verify pytest installation
      run: |
        source .venv/bin/activate
        python -c "import pytest; print(f'pytest {pytest.__version__} is available')"

    - name: Run tests with pytest
      run: |
        source .venv/bin/activate
        uv run pytest tests/ -v --tb=short

    - name: Run tests with coverage
      run: |
        source .venv/bin/activate
        uv run pytest tests/ --cov=ciphr --cov-report=term-missing --cov-report=xml

    - name: Upload coverage reports
      if: matrix.python-version == '3.12'  # Only upload once
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        export PATH="$HOME/.local/bin:$PATH"
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install -e .
        uv pip install --group dev

    - name: Lint with ruff
      run: |
        uv run ruff check --fix .

    - name: Run ruff formatting check
      run: |
        source .venv/bin/activate
        uv run ruff format --check ciphr/ tests/

  installation-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        export PATH="$HOME/.local/bin:$PATH"
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Test basic installation
      run: |
        uv venv --python ${{ matrix.python-version }}
        source .venv/bin/activate
        uv pip install -e .

    - name: Verify installation
      run: |
        source .venv/bin/activate
        python -c "import ciphr; print('CIPhR package imported successfully')"
        uv run ciphr --help
